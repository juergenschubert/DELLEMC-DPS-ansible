---
# tasks file for ddve-post-object-aws
#1 wait for availabillit of ReST endpoint
- name: Wait until {{ DDVE_Public_IP }}/api/doc is comming online
  uri:
    validate_certs: false
    url: https://{{ DDVE_Public_IP }}/api/doc
    status_code: 200
    method: GET
  register: _result
  until: _result.status == 200
  retries: 10 # 10 *60 seconds =  10 Minutes wait
  delay: 60 # Every 5 seconds
#2 get the Bear token from the DD
- name: login access token
  uri:
    validate_certs: false
    status_code: 201
    url: https://{{ DDVE_Public_IP }}:{{ Destination_Port }}/{{ resource_path_2 }}
    method: POST
    body: 
      username: sysadmin
      password: "{{ Instance_Id | string }}"
    headers:
      Content-Type: application/json
    body_format: json
    return_content: true
  register: rest_post2
  vars:
    resource_path_2: rest/v1.0/auth
#This is for debug reason and can be undcomented when needed
#- name: DEBUG / GOT INFO
#  debug:
#    msg: "{{ rest_post2.x_dd_auth_token }}"
#    msg: "{{ rest_post2 }}"
#  when: rest_post2.status ==  201
#3 Chenage default password
- name: change from default login with new password {{ New_Password }}
  uri:
    validate_certs: false
    status_code: 200
    url: https://{{ DDVE_Public_IP }}:{{ Destination_Port }}/{{ resource_path_3 }}
    method: PUT
    body_format: json
    body: 
      new_password: "{{ New_Password | string }}"
      current_password: "{{ Instance_Id | string }}"
    headers:
      X-DD-AUTH-TOKEN: "{{ rest_post2.x_dd_auth_token }}"
      Content-Type: 'application/json'
    return_content: true
  register: rest_response3
  vars:
    resource_path_3: rest/v1.0/dd-systems/0/users/sysadmin
#This is for debug reason and can be undcomented when needed
#- name: DEBUG DD default password change / GOT INFO
#  debug:
#    msg: "{{ rest_response3 }}"
#  when: rest_response3.status ==  200
#4 add DataDomain License
- name: add new DD license
  uri:
    validate_certs: false
    status_code: 200
    url: https://{{ DDVE_Public_IP }}:{{ Destination_Port }}/{{ resource_path_4 }}
    method: PUT
    body_format: json
    body: 
#          { "licenses_modify_2_0": { "operation": "elms_update_with_content", "elms_unserved_license": { "license_content": "Reach out to me for the correct license format\""}}}
    headers:
      X-DD-AUTH-TOKEN: "{{ rest_post2.x_dd_auth_token }}"
      Content-Type: 'application/json'
    return_content: true
  register: rest_response4
  vars:
    resource_path_4: rest/v2.0/dd-systems/0/licenses
#This is for debug reason and can be undcomented when needed
#- name: DEBUG DD update license / GOT INFO
#  debug:
#    msg: "{{ rest_response4 }}"
#  when: rest_response4.status ==  200
#5 change or create a new passphrase
- name: change passphrase after install
  uri:
    validate_certs: false
    status_code: 200
    url: https://{{ DDVE_Public_IP }}:{{ Destination_Port }}/{{ resource_path_5 }}
    method: PUT
    body_format: json
    body:
      { "operation":"set_pphrase","pphrase_request":{ "new_pphrase": "{{ New_Passphrase }}" } }
  #    { "operation":"set_pphrase","pphrase_request":{ "new_pphrase":"{{ New_Passphrase }}" } }
    headers:
      X-DD-AUTH-TOKEN: "{{ rest_post2.x_dd_auth_token }}"
      Content-Type: 'application/json'
    return_content: true
  register: rest_response5
  vars:
    resource_path_5: rest/v3.0/dd-systems/0/systems
#This is for debug reason and can be undcomented when needed
#- name: DEBUG DD change passphrase / GOT INFO
#  debug:
#    msg: "{{ rest_response5 }}"
#  when: rest_response5.status ==  200
#6 List available disks for the DD active tier
- name: list available disks
  uri:
    validate_certs: false
    status_code: 200
    url: https://{{ DDVE_Public_IP }}:{{ Destination_Port }}/{{ resource_path_6 }}
    method: GET
    body_format: json
    headers:
      X-DD-AUTH-TOKEN: "{{ rest_post2.x_dd_auth_token }}"
      Content-Type: 'application/json'
    return_content: true
  register: rest_response6
  vars:
    resource_path_6: api/v1/dd-systems/0/storage/disks?filter=status%3DUNKNOWN
#This is for debug reason and can be undcomented when needed
- name: DEBUG list available disk / GOT INFO
  debug:
    msg: "{{ rest_response6.json }}"
  when: rest_response6.status ==  200
#7 enable block storage with disk
- name: DD add block storage
  uri:
    validate_certs: false
    status_code: 200
    url: https://{{ DDVE_Public_IP }}:{{ Destination_Port }}/{{ resource_path_7 }}
    method: PUT
    body_format: json
    body: { "disks": [ "dev3" ] }
    headers:
      X-DD-AUTH-TOKEN: "{{ rest_post2.x_dd_auth_token }}"
      Content-Type: 'application/json'
    return_content: true
  register: rest_response_7
  vars:
    resource_path_7: api/v1/dd-systems/0/file-systems/block-storages

#- name: DEBUG add block storage / GOT INFO
#  debug:
#    msg: "{{ rest_response_7.json }}"
#  when: rest_response_7.status ==  200
#10 create the DD FileSystem
- name: create DD filesystem
  uri:
    validate_certs: false
    status_code: 200
    timeout: 240
    url: https://{{ DDVE_Public_IP }}:{{ Destination_Port }}/{{ resource_path_10 }}
    method: PUT
    body_format: json
    body: 
      { "operation": "create" }
    headers:
      X-DD-AUTH-TOKEN: "{{ rest_post2.x_dd_auth_token }}"
      Content-Type: 'application/json'
    return_content: true
  register: rest_response10
  vars:
    resource_path_10: rest/v1.0/dd-systems/0/file-systems
#This is for debug reason and can be undcomented when needed
#- name: DEBUG update license / GOT INFO
#  debug:
#    msg: "{{ rest_response10.json }}"
#  when: rest_response10.status ==  200
#11 enable the created DD FileSystem
- name: enable DD filesystem
  uri:
    validate_certs: false
    status_code: 200
    timeout: 240
    url: https://{{ DDVE_Public_IP }}:{{ Destination_Port }}/{{ resource_path_11 }}
    method: PUT
    body_format: json
    body: 
      { "operation": "enable" }
    headers:
        X-DD-AUTH-TOKEN: "{{ rest_post2.x_dd_auth_token }}"
        Content-Type: 'application/json'
    return_content: true
  register: rest_response11
  vars:
    resource_path_11: rest/v1.0/dd-systems/0/file-systems
#This is for debug reason and can be undcomented when needed
#- name: DEBUG update license / GOT INFO
#  debug:
#    msg: "{{ rest_response11.json }}"
#  when: rest_response11.status ==  200
#12 DD timezone to Berlin
- name: timezone setting to Berlin
  uri:
    validate_certs: false
    status_code: 200
    url: https://{{ DDVE_Public_IP }}:{{ Destination_Port }}/{{ resource_path_12 }}
    method: PUT
    body_format: json
    body: 
      { "operation": "set_timezone", "timezone": "Europe/Berlin" }
    headers:
      X-DD-AUTH-TOKEN: "{{ rest_post2.x_dd_auth_token }}"
      Content-Type: 'application/json'
    return_content: true
  register: rest_response12
  vars:
    resource_path_12: rest/v3.0/dd-systems/0/settings
#This is for debug reason and can be undcomented when needed
#- name: DEBUG change timezone  / GOT INFO
#  debug:
#    msg: "{{ rest_response12.json }}"
#  when: rest_response12.status ==  200
#13 Enable DDBOST
- name: enable DDBoost
  uri:
    validate_certs: false
    status_code: 200
    url: https://{{ DDVE_Public_IP }}:{{ Destination_Port }}/{{ resource_path_13 }}
    method: PUT
    body_format: json
    body: 
      { "operation":"enable" }
    headers:
      X-DD-AUTH-TOKEN: "{{ rest_post2.x_dd_auth_token }}"
      Content-Type: 'application/json'
    return_content: true
  register: rest_response13
  vars:
    resource_path_13: rest/v1.0/dd-systems/0/protocols/ddboost
#This is for debug reason and can be undcomented when needed
- name: DEBUG DDBoost enable  / GOT INFO
  debug:
    msg: "{{ rest_response13.json }}"
#  when: rest_response13.status ==  200